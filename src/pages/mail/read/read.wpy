<style lang="less">
  .detailPopup {
    height: 25rem;
    .list {
      margin-top: 1rem;
      padding: 0 .5rem;
    }
    .item {
      width: 25%;
    }
    .header {
      font-size: .8rem;
      color: rgb(153, 153, 153);
      margin-bottom: .5rem;
    }
    .item-sub-title {
      font-size: .7rem;
      word-break: break-all;
    }
    .item-text {
      font-size: .65rem;
      word-break: break-all;
    }
  }

  .attaches {
    .item {
      margin-top: .5rem;
      background-color: rgb(238, 238, 238);
    }
  }

  .markingPopupOpen {
    width: 14rem;
    min-height: 20rem;
    overflow: auto;
    .item {
      height: 2rem;
      padding: .2rem;
      .icon {
        font-size: 1rem;
        display: flex;
      }
      .name {
        font-size: .75rem;
      }
    }
  }

</style>
<template>
  <tb-nav title="{{mail.subject}}"></tb-nav>
  <view class="tb-content has-sub-header tb-has-bottom-tab">
    <view>
      <tb-list-item avatar="{{mail.headerPhoto}}" sub-title="{{mail.fullTitle}}" bind:error="error">
        <view slot="text">
          <wxc-flex>
            <wxc-elip class="tb-flex-item" style="flex-grow: 5;max-width: 90%">
              <text>{{mail.formatTime}}</text>
              <text space="{{true}}" decode="{{true}}"> 发至</text>
              <text> {{mail.tosFormatName}}</text>
            </wxc-elip>
            <view class="tb-flex-item" style="flex-grow: 2;color: #49A9F2;text-align: right"
                  @tap.stop="openPopup('detailPopupOpen')">详情
            </view>
          </wxc-flex>
        </view>
      </tb-list-item>
    </view>
    <view style="padding: 1rem 0;">
      <tb-rich-text nodes="{{mail.content}}" bind:tagATap="tagATap"></tb-rich-text>
    </view>
    <view style="padding: 0 .5rem 1rem .5rem" class="attaches" wx:if="{{mail.attaches&&mail.attaches.length}}">
      <block wx:for="{{mail.attaches}}" wx:key="{{item.id}}">
        <tb-list-item item-class="item" title="{{item.name}}" text="{{item.formatSize}}" has-left has-right
                      @tap.stop="attachItemTap('item',{{item}})">
          <view style="height: 2.5rem" slot="left">
            <wxc-avatar class="tb-head-avatar" mold="square" src="{{item.icon}}">
            </wxc-avatar>
          </view>
          <view slot="right" style="padding-right: .5rem">
            <icon class="iconfont icon-nav_btn_next" style="font-size: 1.2rem"
                  @tap.stop="attachItemTap('icon',{{item}})"></icon>
          </view>
        </tb-list-item>
      </block>
    </view>
  </view>
  <!--详情弹出层-->
  <tb-popup open="{{popup.detailPopupOpen}}" position="bottom" name="detailPopupOpen" bind:show="popupChange"
            bind:hide="popupChange">
    <scroll-view class="detailPopup" scroll-y>
      <wxc-flex dir="top">
        <view>
          <view class="header" style="padding-left: .5rem;margin: .5rem 0 0 0">
            <text>发件人</text>
          </view>
          <wxc-flex cross="center">
            <view>
              <tb-list-item avatar="{{mail.headerPhoto}}" sub-title="{{mail.title}}" bind:error="error"
                            text="{{mail.address}}"></tb-list-item>
            </view>
          </wxc-flex>
        </view>
        <view class="list">
          <view class="header">
            <text>收件人</text>
          </view>
          <wxc-flex wx:if="{{mail.tos&&mail.tos.length>0}}" wrap="wrap">
            <block wx:for="{{mail.tos}}" wx:key="{{item.id}}">
              <view class="item">
                <view class="text-center">
                  <wxc-avatar class="tb-head-avatar" src="{{item.headerPhoto}}" bind:error="error">
                  </wxc-avatar>
                </view>
                <view class="text-center">
                  <text class="item-sub-title">{{item.name}}</text>
                </view>
                <view class="text-center">
                  <text class="item-text">{{item.address}}</text>
                </view>
              </view>
            </block>
          </wxc-flex>
        </view>
        <view class="list">
          <view class="header">
            <text>抄送</text>
          </view>
          <wxc-flex wx:if="{{mail.ccs&&mail.ccs.length>0}}" wrap="wrap">
            <block wx:for="{{mail.ccs}}" wx:key="{{item.id}}">
              <view class="item">
                <view class="text-center">
                  <wxc-avatar class="tb-head-avatar" src="{{item.headerPhoto}}" bind:error="error">
                  </wxc-avatar>
                </view>
                <view class="text-center">
                  <text class="item-sub-title">{{item.name}}</text>
                </view>
                <view class="text-center">
                  <text class="item-text">{{item.address}}</text>
                </view>
              </view>
            </block>
          </wxc-flex>
        </view>
        <view class="list">
          <view class="header">
            <text>密送</text>
          </view>
          <wxc-flex wx:if="{{mail.bccs&&mail.bccs.length>0}}" wrap="wrap">
            <block wx:for="{{mail.bccs}}" wx:key="{{item.id}}">
              <view class="item">
                <view class="text-center">
                  <wxc-avatar class="tb-head-avatar" src="{{item.headerPhoto}}" bind:error="error">
                  </wxc-avatar>
                </view>
                <view class="text-center">
                  <text class="item-sub-title">{{item.name}}</text>
                </view>
                <view class="text-center">
                  <text class="item-text">{{item.address}}</text>
                </view>
              </view>
            </block>
          </wxc-flex>
        </view>
      </wxc-flex>
    </scroll-view>
  </tb-popup>
  <!--底部工具栏-->
  <view class="tb-bar tb-bar-tab">
    <view class="tb-tab-item" @tap="tabBarTap('delete')">
      <icon class="iconfont icon-bottom_btn_delete tb-tab-icon"></icon>
    </view>
    <view class="tb-tab-item" @tap="openPopup('markingPopupOpen')">
      <icon class="iconfont icon-bottom_btn_marking tb-tab-icon"></icon>
    </view>
    <view class="tb-tab-item" @tap="openPopup('movePopupOpen')">
      <icon class="iconfont icon-bottom_btn_move tb-tab-icon"></icon>
    </view>
    <view class="tb-tab-item" @tap="tabBarTap('forward')">
      <icon class="iconfont icon-bottom_btn_forwardin tb-tab-icon"></icon>
    </view>
    <view class="tb-tab-item" @tap="tabBarTap('reply')">
      <icon class="iconfont icon-bottom_btn_revert tb-tab-icon"></icon>
    </view>
  </view>
  <!--标记弹出层-->
  <tb-popup open="{{popup.markingPopupOpen}}" name="markingPopupOpen" bind:show="popupChange" bind:hide="popupChange">
    <view class="markingPopupOpen">
      <wxc-flex dir="top" main="center">
        <block wx:for="{{markingItems}}" wx:key="{{item.id}}">
          <view class="tb-flex-item item">
            <wxc-flex cross="center" bind:tap="onMarkingMail({{item}})">
              <view class="tb-flex-item" style="width: 20%">
                <icon class="iconfont {{item.icon}} icon"></icon>
              </view>
              <view class="tb-flex-item" style="flex-grow: 4;width: 80%">
                <wxc-elip class="name">{{item.name}}</wxc-elip>
              </view>
            </wxc-flex>
          </view>
        </block>
      </wxc-flex>
    </view>
  </tb-popup>
  <!--移动弹出层-->
  <tb-popup open="{{popup.movePopupOpen}}" name="movePopupOpen" bind:show="popupChange"
            bind:hide="popupChange">
    <view class="markingPopupOpen">
      <wxc-flex dir="top" main="center"
                class="{{movePopupFolder.currentFolderId&&movePopupFolder.currentFolderId!=='root'?'tb-has-bottom-tab':''}}">
        <block wx:for="{{movePopupFolder.currentFolders}}" wx:key="{{item.id}}">
          <view class="tb-flex-item item">
            <wxc-flex cross="center" bind:tap="moveMailTap({{[mail.id]}},{{item}})">
              <view class="tb-flex-item" style="width: 20%">
                <icon class="iconfont {{item.icon}} icon"></icon>
              </view>
              <view class="tb-flex-item" style="flex-grow: 4;width: {{item.hasChildNodes?'60%':'80%'}};">
                <wxc-elip class="name">{{item.name}}</wxc-elip>
              </view>
              <view class="tb-flex-item" style="width: 20%" wx:if="{{item.hasChildNodes}}"
                    @tap.stop="intoFolder('movePopupFolder',{{item.id}})">
                <icon class="iconfont icon-next-m icon" style="font-size: 1rem;color: #cccccc"></icon>
              </view>
            </wxc-flex>
          </view>
          <view class="tb-flex-item  tb-bar tb-bar-tab"
                wx:if="{{movePopupFolder.currentFolderId&&movePopupFolder.currentFolderId!=='root'}}">
            <wxc-flex dir="top" main="center" style="height: 2.5rem;">
              <view style="font-size: .75rem;color: #49A9F2;padding-left: .5rem" @tap="backFolder('movePopupFolder')">
                <icon class="iconfont icon-move_mail_icon_back"></icon>
                <view style="display: inline-block">上一级</view>
              </view>
            </wxc-flex>
          </view>
        </block>
      </wxc-flex>
    </view>
  </tb-popup>
</template>

<script>
  import wepy from 'wepy'
  import BaseMixin from '../../../mixins/base'
  import CommonMixin from '../../../mixins/common'
  import MailOperatorMixin from '../../../mixins/mailOperator'
  import PopupMixin from '../../../mixins/popup'
  import {downloadFile} from '../../../utils/utils'
  import onfire from '../../../utils/onfire.min'

  export default class Read extends wepy.page {
    mixins = [BaseMixin, CommonMixin, PopupMixin, MailOperatorMixin]
    config = {
      navigationBarTitleText: '',
      usingComponents: {
        'tb-nav': '../../../components/tbui/tb-nav/index',
        'tb-list-item': '../../../components/tbui/tb-list-item/index',
        'wxc-elip': '../../../components/minui/wxc-elip/index',
        'wxc-flex': '../../../components/minui/wxc-flex/index',
        'tb-popup': '../../../components/tbui/tb-popup/index',
        'wxc-avatar': '../../../components/minui/wxc-avatar/index',
        'tb-rich-text': '../../../components/tbui/tb-rich-text/index'
      }
    }
    components = {}
    data = {
      mail: {},
      popup: {
        detailPopupOpen: false,
        attachPopupOpen: false,
        markingPopupOpen: false,
        movePopupOpen: false

      }
    }
    computed = {}
    methods = {
      error(e) {
        console.log(e)
      },
      /**
       * 附件点击事件
       * @param item
       */
      attachItemTap(type, item) {
        let self = this
        if (type === 'item') {
          this.attachPreview({
            id: item.id,
            name: item.name,
            src: item.downloadUrl,
            mailId: self.mail.id
          }).then((can) => {
            if (!can) {
              console.log('预览失败')
            }
          })
        } else if (type === 'icon') {
          wepy.showActionSheet({
            itemList: ['转发', '下载', '转存'],
            success(obj) {
              if (obj.tapIndex === 1) {
                downloadFile({
                  filePath: item.downloadUrl,
                  name: item.name,
                  success() {
                  },
                  fail() {
                  },
                  complete() {
                  }
                })
              }
            }
          })
        }
      },
      tagATap(e) {
        let _this = this
        let {src} = e.detail
        if (src) {
          wx.showActionSheet({
            itemList: ['打开', '复制路径'],
            success(res) {
              if (res.tapIndex === 0) {
                src = encodeURIComponent(src)
                _this.loadPage(`/pages/webView/webView?src=${src}`)
              } else if (res.tapIndex === 1) {
                wx.setClipboardData({
                  data: src,
                  success: function (res) {
                    wepy.showToast({
                      title: '复制成功'
                    })
                  }
                })
              }
            }
          })
        }
      },
      /**
       * 下方工具栏点击事件
       * @param type
       */
      tabBarTap(type) {
        if (type === 'forward') {
          let data = {
            id: this.mail.id,
            password: this.mail.password
          }
          this.loadPage(`/pages/mail/write/write?type=mailForward&data=${JSON.stringify(data)}`)
        } else if (type === 'reply') {
          let data = {
            id: this.mail.id,
            password: this.mail.password
          }
          this.loadPage(`/pages/mail/write/write?type=mailReply&data=${JSON.stringify(data)}`)
        } else if (type === 'delete') {
          this.logicDeleteMail([this.mail.id]).then(() => {
            this.backPage()
            onfire.fire('refresh')
          })
        }
      },
      /**
       * 邮件标记
       * @param item
       */
      onMarkingMail(item) {
        this.markingMail([this.mail.id], item).then(() => {
          this.closePopup('markingPopupOpen')
          onfire.fire('refresh')
        })
      },
      /**
       * 移动邮件
       * @param ids
       * @param item
       */
      moveMailTap(ids, item) {
        this.moveMailTap(ids, item).then(() => {
          this.closePopup('movePopupOpen')
          onfire.fire('refresh')
        })
      }
    }

    onShow() {
    }

    onLoad(params) {
      let self = this
      if (params.id) {
        wepy.showLoading({title: '加载邮件中...'})
        self.getMailById(params.id, params.password).then((mail) => {
          console.log(mail)
          self.mail = mail
          self.$apply()
          wepy.hideLoading()
        }).catch((e) => {
          wepy.hideLoading()
          wepy.showToast({
            title: e.message,
            icon: 'none',
            complete() {
              setTimeout(() => {
                self.backPage()
              }, 500)
            }
          })
        })
      } else {
        wepy.showToast({
          title: '获取邮件失败,请重新打开邮件',
          icon: 'none',
          complete() {
            setTimeout(() => {
              self.backPage()
            }, 500)
          }
        })
      }
    }
  }
</script>
