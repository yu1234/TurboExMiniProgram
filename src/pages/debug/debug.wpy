<template>
  <tb-nav title="调试页" @tap="onTap()"></tb-nav>
  <view class="tb-content has-sub-header">
    <view class="tb-list">
      <tb-mail-list-item avatar="{{avatar}}" title="邮件列表测试" subTitle="subTitle"
                         text="text"
                         titleAfter="2018-01-01" unRead="{{true}}"
                         wx:for="{{[1]}}">

      </tb-mail-list-item>
      <tb-checkbox value="test" name="checkbox" model="{{checkbox}}" bind:change="formChange"></tb-checkbox>
      <tb-checkbox value="test1" name="checkbox" model="{{checkbox}}" bind:change="formChange"></tb-checkbox>
      <tb-checkbox value="test2" name="checkbox" model="{{checkbox}}" bind:change="formChange"></tb-checkbox>
      <tb-checkbox value="test3" name="checkbox" model="{{checkbox}}" bind:change="formChange"></tb-checkbox>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {service} from '../../config'
  import LoadMoreMixin from '../../mixins/loadMore'
  import PullDownRefreshMixin from '../../mixins/pullDownRefresh'
  import BaseMixin from '../../mixins/base'
  import FormMixin from '../../mixins/form'

  export default class Address extends wepy.page {
    mixins = [BaseMixin, PullDownRefreshMixin, LoadMoreMixin, FormMixin]
    config = {
      navigationBarTitleText: '调试页',
      usingComponents: {
        'tb-mail-list-item': '../../components/tbui/tb-mail-list-item/index',
        'tb-list-item': '../../components/tbui/tb-list-item/index',
        'tb-nav': '../../components/tbui/tb-nav/index',
        'tb-checkbox': '../../components/tbui/tb-checkbox/index',
        'wxc-elip': '../../components/minui/wxc-elip/index'
      }
    }
    components = {}
    data = {
      avatar: `${service.host}/img/av1.png`,
      checkbox: []
    }
    computed = {}
    methods = {
      checkboxChange(e) {
        console.log(e.detail.model)
        this.checkbox = e.detail.model
      },
      onTap() {
        console.log(this.checkbox)
      }
    }

    onShow() {
      console.log('debugger onLoad', this.navHeight)
    }

    onLoad() {
      console.log('debugger onLoad')
    }

    onReachBottom() {
      console.log('debugger onReachBottom')
    }
  }
</script>

<style>

</style>
